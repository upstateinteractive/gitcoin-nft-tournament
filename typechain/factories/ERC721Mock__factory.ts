/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC721Mock, ERC721MockInterface } from "../ERC721Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200298638038062002986833981810160405281019062000037919062000197565b818181600090805190602001906200005192919062000075565b5080600190805190602001906200006a92919062000075565b50505050506200033b565b8280546200008390620002a7565b90600052602060002090601f016020900481019282620000a75760008555620000f3565b82601f10620000c257805160ff1916838001178555620000f3565b82800160010185558215620000f3579182015b82811115620000f2578251825591602001919060010190620000d5565b5b50905062000102919062000106565b5090565b5b808211156200012157600081600090555060010162000107565b5090565b60006200013c62000136846200023e565b6200020a565b9050828152602081018484840111156200015557600080fd5b6200016284828562000271565b509392505050565b600082601f8301126200017c57600080fd5b81516200018e84826020860162000125565b91505092915050565b60008060408385031215620001ab57600080fd5b600083015167ffffffffffffffff811115620001c657600080fd5b620001d4858286016200016a565b925050602083015167ffffffffffffffff811115620001f257600080fd5b62000200858286016200016a565b9150509250929050565b6000604051905081810181811067ffffffffffffffff821117156200023457620002336200030c565b5b8060405250919050565b600067ffffffffffffffff8211156200025c576200025b6200030c565b5b601f19601f8301169050602081019050919050565b60005b838110156200029157808201518184015260208101905062000274565b83811115620002a1576000848401525b50505050565b60006002820490506001821680620002c057607f821691505b60208210811415620002d757620002d6620002dd565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61263b806200034b6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a22cb46511610066578063a22cb4651461025b578063b88d4fde14610277578063c87b56dd14610293578063e985e9c5146102c3576100ea565b806370a08231146101f157806395d89b4114610221578063a14481941461023f576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806323b872dd1461018957806342842e0e146101a55780636352211e146101c1576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b6101096004803603810190610104919061190b565b6102f3565b6040516101169190612003565b60405180910390f35b6101276103d5565b604051610134919061201e565b60405180910390f35b6101576004803603810190610152919061195d565b610467565b6040516101649190611f9c565b60405180910390f35b610187600480360381019061018291906118cf565b6104ec565b005b6101a3600480360381019061019e91906117c9565b610604565b005b6101bf60048036038101906101ba91906117c9565b610664565b005b6101db60048036038101906101d6919061195d565b610684565b6040516101e89190611f9c565b60405180910390f35b61020b60048036038101906102069190611764565b610736565b6040516102189190612200565b60405180910390f35b6102296107ee565b604051610236919061201e565b60405180910390f35b610259600480360381019061025491906118cf565b610880565b005b61027560048036038101906102709190611893565b61088e565b005b610291600480360381019061028c9190611818565b610a0f565b005b6102ad60048036038101906102a8919061195d565b610a71565b6040516102ba919061201e565b60405180910390f35b6102dd60048036038101906102d8919061178d565b610b18565b6040516102ea9190612003565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103be57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103ce57506103cd82610bac565b5b9050919050565b6060600080546103e490612430565b80601f016020809104026020016040519081016040528092919081815260200182805461041090612430565b801561045d5780601f106104325761010080835404028352916020019161045d565b820191906000526020600020905b81548152906001019060200180831161044057829003601f168201915b5050505050905090565b600061047282610c16565b6104b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a890612160565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104f782610684565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055f906121c0565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610587610c82565b73ffffffffffffffffffffffffffffffffffffffff1614806105b657506105b5816105b0610c82565b610b18565b5b6105f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ec906120e0565b60405180910390fd5b6105ff8383610c8a565b505050565b61061561060f610c82565b82610d43565b610654576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064b906121e0565b60405180910390fd5b61065f838383610e21565b505050565b61067f83838360405180602001604052806000815250610a0f565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561072d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072490612120565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079e90612100565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600180546107fd90612430565b80601f016020809104026020016040519081016040528092919081815260200182805461082990612430565b80156108765780601f1061084b57610100808354040283529160200191610876565b820191906000526020600020905b81548152906001019060200180831161085957829003601f168201915b5050505050905090565b61088a828261107d565b5050565b610896610c82565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610904576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fb906120a0565b60405180910390fd5b8060056000610911610c82565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166109be610c82565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610a039190612003565b60405180910390a35050565b610a20610a1a610c82565b83610d43565b610a5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a56906121e0565b60405180910390fd5b610a6b8484848461109b565b50505050565b6060610a7c82610c16565b610abb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab2906121a0565b60405180910390fd5b6000610ac56110f7565b90506000815111610ae55760405180602001604052806000815250610b10565b80610aef8461110e565b604051602001610b00929190611f78565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610cfd83610684565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610d4e82610c16565b610d8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d84906120c0565b60405180910390fd5b6000610d9883610684565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610e0757508373ffffffffffffffffffffffffffffffffffffffff16610def84610467565b73ffffffffffffffffffffffffffffffffffffffff16145b80610e185750610e178185610b18565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610e4182610684565b73ffffffffffffffffffffffffffffffffffffffff1614610e97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8e90612180565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efe90612080565b60405180910390fd5b610f128383836112bb565b610f1d600082610c8a565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f6d9190612346565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fc491906122bf565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6110978282604051806020016040528060008152506112c0565b5050565b6110a6848484610e21565b6110b28484848461131b565b6110f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e890612040565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000821415611156576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506112b6565b600082905060005b6000821461118857808061117190612462565b915050600a826111819190612315565b915061115e565b60008167ffffffffffffffff8111156111ca577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156111fc5781602001600182028036833780820191505090505b5090505b600085146112af576001826112159190612346565b9150600a8561122491906124ab565b603061123091906122bf565b60f81b81838151811061126c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856112a89190612315565b9450611200565b8093505050505b919050565b505050565b6112ca83836114b2565b6112d7600084848461131b565b611316576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130d90612040565b60405180910390fd5b505050565b600061133c8473ffffffffffffffffffffffffffffffffffffffff16611680565b156114a5578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611365610c82565b8786866040518563ffffffff1660e01b81526004016113879493929190611fb7565b602060405180830381600087803b1580156113a157600080fd5b505af19250505080156113d257506040513d601f19601f820116820180604052508101906113cf9190611934565b60015b611455573d8060008114611402576040519150601f19603f3d011682016040523d82523d6000602084013e611407565b606091505b5060008151141561144d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144490612040565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506114aa565b600190505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611522576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161151990612140565b60405180910390fd5b61152b81610c16565b1561156b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156290612060565b60405180910390fd5b611577600083836112bb565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546115c791906122bf565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600080823b905060008111915050919050565b60006116a66116a18461224c565b61221b565b9050828152602081018484840111156116be57600080fd5b6116c98482856123ee565b509392505050565b6000813590506116e0816125a9565b92915050565b6000813590506116f5816125c0565b92915050565b60008135905061170a816125d7565b92915050565b60008151905061171f816125d7565b92915050565b600082601f83011261173657600080fd5b8135611746848260208601611693565b91505092915050565b60008135905061175e816125ee565b92915050565b60006020828403121561177657600080fd5b6000611784848285016116d1565b91505092915050565b600080604083850312156117a057600080fd5b60006117ae858286016116d1565b92505060206117bf858286016116d1565b9150509250929050565b6000806000606084860312156117de57600080fd5b60006117ec868287016116d1565b93505060206117fd868287016116d1565b925050604061180e8682870161174f565b9150509250925092565b6000806000806080858703121561182e57600080fd5b600061183c878288016116d1565b945050602061184d878288016116d1565b935050604061185e8782880161174f565b925050606085013567ffffffffffffffff81111561187b57600080fd5b61188787828801611725565b91505092959194509250565b600080604083850312156118a657600080fd5b60006118b4858286016116d1565b92505060206118c5858286016116e6565b9150509250929050565b600080604083850312156118e257600080fd5b60006118f0858286016116d1565b92505060206119018582860161174f565b9150509250929050565b60006020828403121561191d57600080fd5b600061192b848285016116fb565b91505092915050565b60006020828403121561194657600080fd5b600061195484828501611710565b91505092915050565b60006020828403121561196f57600080fd5b600061197d8482850161174f565b91505092915050565b61198f8161237a565b82525050565b61199e8161238c565b82525050565b60006119af8261227c565b6119b98185612292565b93506119c98185602086016123fd565b6119d281612598565b840191505092915050565b60006119e882612287565b6119f281856122a3565b9350611a028185602086016123fd565b611a0b81612598565b840191505092915050565b6000611a2182612287565b611a2b81856122b4565b9350611a3b8185602086016123fd565b80840191505092915050565b6000611a546032836122a3565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b6000611aba601c836122a3565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b6000611afa6024836122a3565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611b606019836122a3565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b6000611ba0602c836122a3565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000611c066038836122a3565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b6000611c6c602a836122a3565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b6000611cd26029836122a3565b91507f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008301527f656e7420746f6b656e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000611d386020836122a3565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b6000611d78602c836122a3565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000611dde6029836122a3565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000611e44602f836122a3565b91507f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b6000611eaa6021836122a3565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611f106031836122a3565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b611f72816123e4565b82525050565b6000611f848285611a16565b9150611f908284611a16565b91508190509392505050565b6000602082019050611fb16000830184611986565b92915050565b6000608082019050611fcc6000830187611986565b611fd96020830186611986565b611fe66040830185611f69565b8181036060830152611ff881846119a4565b905095945050505050565b60006020820190506120186000830184611995565b92915050565b6000602082019050818103600083015261203881846119dd565b905092915050565b6000602082019050818103600083015261205981611a47565b9050919050565b6000602082019050818103600083015261207981611aad565b9050919050565b6000602082019050818103600083015261209981611aed565b9050919050565b600060208201905081810360008301526120b981611b53565b9050919050565b600060208201905081810360008301526120d981611b93565b9050919050565b600060208201905081810360008301526120f981611bf9565b9050919050565b6000602082019050818103600083015261211981611c5f565b9050919050565b6000602082019050818103600083015261213981611cc5565b9050919050565b6000602082019050818103600083015261215981611d2b565b9050919050565b6000602082019050818103600083015261217981611d6b565b9050919050565b6000602082019050818103600083015261219981611dd1565b9050919050565b600060208201905081810360008301526121b981611e37565b9050919050565b600060208201905081810360008301526121d981611e9d565b9050919050565b600060208201905081810360008301526121f981611f03565b9050919050565b60006020820190506122156000830184611f69565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561224257612241612569565b5b8060405250919050565b600067ffffffffffffffff82111561226757612266612569565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006122ca826123e4565b91506122d5836123e4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561230a576123096124dc565b5b828201905092915050565b6000612320826123e4565b915061232b836123e4565b92508261233b5761233a61250b565b5b828204905092915050565b6000612351826123e4565b915061235c836123e4565b92508282101561236f5761236e6124dc565b5b828203905092915050565b6000612385826123c4565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561241b578082015181840152602081019050612400565b8381111561242a576000848401525b50505050565b6000600282049050600182168061244857607f821691505b6020821081141561245c5761245b61253a565b5b50919050565b600061246d826123e4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156124a05761249f6124dc565b5b600182019050919050565b60006124b6826123e4565b91506124c1836123e4565b9250826124d1576124d061250b565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6125b28161237a565b81146125bd57600080fd5b50565b6125c98161238c565b81146125d457600080fd5b50565b6125e081612398565b81146125eb57600080fd5b50565b6125f7816123e4565b811461260257600080fd5b5056fea2646970667358221220c5b7ea621a2248d809f3f6b5057afbf0398a7f9a5a2829f27d9e32f509d40fd164736f6c63430008000033";

export class ERC721Mock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721Mock> {
    return super.deploy(name, symbol, overrides || {}) as Promise<ERC721Mock>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  attach(address: string): ERC721Mock {
    return super.attach(address) as ERC721Mock;
  }
  connect(signer: Signer): ERC721Mock__factory {
    return super.connect(signer) as ERC721Mock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721MockInterface {
    return new utils.Interface(_abi) as ERC721MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC721Mock;
  }
}
